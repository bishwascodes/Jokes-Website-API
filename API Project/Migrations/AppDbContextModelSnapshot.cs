// <auto-generated />
using Jokes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("jokes")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DbAudienceDbJoke", b =>
                {
                    b.Property<int>("AudiencesAudienceId")
                        .HasColumnType("integer");

                    b.Property<int>("JokesJokeId")
                        .HasColumnType("integer");

                    b.HasKey("AudiencesAudienceId", "JokesJokeId");

                    b.HasIndex("JokesJokeId");

                    b.ToTable("DbAudienceDbJoke", "jokes");
                });

            modelBuilder.Entity("Jokes.Models.DbAudience", b =>
                {
                    b.Property<int>("AudienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AudienceId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("AudienceId");

                    b.ToTable("Audiences", "jokes");
                });

            modelBuilder.Entity("Jokes.Models.DbCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", "jokes");
                });

            modelBuilder.Entity("Jokes.Models.DbJoke", b =>
                {
                    b.Property<int>("JokeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JokeId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("JokeId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Jokes", "jokes");
                });

            modelBuilder.Entity("DbAudienceDbJoke", b =>
                {
                    b.HasOne("Jokes.Models.DbAudience", null)
                        .WithMany()
                        .HasForeignKey("AudiencesAudienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jokes.Models.DbJoke", null)
                        .WithMany()
                        .HasForeignKey("JokesJokeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jokes.Models.DbJoke", b =>
                {
                    b.HasOne("Jokes.Models.DbCategory", "Category")
                        .WithMany("Jokes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Jokes.Models.DbCategory", b =>
                {
                    b.Navigation("Jokes");
                });
#pragma warning restore 612, 618
        }
    }
}
